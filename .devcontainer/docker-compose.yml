name: cafe_connecte
services:
  laravel.test:
    env_file:
      - ../backend/.env
    image: php:8.2-cli
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${APP_PORT:-8000}:80'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
      DB_HOST: mysql
      DB_DATABASE: backend_db
      DB_USERNAME: backend_user
      DB_PASSWORD: cafe_password
      COMPOSER_PROCESS_TIMEOUT: 2000
    command: >
      sh -c "
        apt-get update && 
        apt-get install -y git curl zip unzip libpq-dev libonig-dev libxml2-dev libpng-dev libjpeg-dev libfreetype6-dev default-mysql-client &&
        docker-php-ext-configure gd --with-freetype --with-jpeg &&
        docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd &&
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
        while ! mysqladmin ping -h mysql -u backend_user -pcafe_password --silent; do
          echo 'En attente de MySQL...';
          sleep 1;
        done &&
        echo 'MySQL est prêt, démarrage de Laravel...' &&
        cd /var/www/html &&
        if [ ! -f 'vendor/autoload.php' ]; then
          echo 'Installation des dépendances Composer...' &&
          composer install;
        fi &&
        if [ -z '$${APP_KEY}' ] || ! grep -q 'APP_KEY=' .env; then
          echo 'Génération de la clé Laravel...' &&
          php artisan key:generate;
        fi &&
        echo 'Exécution des migrations et seeds...' &&
        php artisan migrate:fresh --seed &&
        echo 'Démarrage du serveur Laravel...' &&
        exec php -S 0.0.0.0:80 -t public
      "
    volumes:
      - ../backend:/var/www/html
    networks:
      - sail
    depends_on:
      - mysql

  coffee-worker:
    env_file:
      - ../backend/.env
    image: php:8.2-cli
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    command: >
      sh -c "
        apt-get update && 
        apt-get install -y git curl zip unzip libpq-dev libonig-dev libxml2-dev default-mysql-client &&
        docker-php-ext-install pdo_mysql mbstring &&
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
        while ! curl -s http://laravel.test > /dev/null; do
          echo 'En attente de Laravel...';
          sleep 2;
        done &&
        cd /var/www/html &&
        composer install &&
        echo 'Démarrage du worker de machine à café...' &&
        php artisan coffee:worker
      "
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      LARAVEL_SAIL: 1
      DB_HOST: mysql
      DB_DATABASE: backend_db
      DB_USERNAME: backend_user
      DB_PASSWORD: cafe_password
    volumes:
      - ../backend:/var/www/html
    networks:
      - sail
    depends_on:
      - mysql
      - laravel.test
    restart: unless-stopped

  queue-worker:
    env_file:
      - ../backend/.env
    image: php:8.2-cli
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    command: >
      sh -c "
        apt-get update && 
        apt-get install -y git curl zip unzip libpq-dev libonig-dev libxml2-dev default-mysql-client &&
        docker-php-ext-install pdo_mysql mbstring &&
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
        while ! curl -s http://laravel.test > /dev/null; do
          echo 'En attente de Laravel...';
          sleep 2;
        done &&
        cd /var/www/html &&
        composer install &&
        echo 'Démarrage du worker de queue...' &&
        php artisan queue:work --verbose --tries=3 --timeout=90
      "
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      LARAVEL_SAIL: 1
      DB_HOST: mysql
      DB_DATABASE: backend_db
      DB_USERNAME: backend_user
      DB_PASSWORD: cafe_password
    volumes:
      - ../backend:/var/www/html
    networks:
      - sail
    depends_on:
      - mysql
      - laravel.test
    restart: unless-stopped

  horizon:
    env_file:
      - ../backend/.env
    image: php:8.2-cli
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    command: >
      sh -c "
        apt-get update && 
        apt-get install -y git curl zip unzip libpq-dev libonig-dev libxml2-dev default-mysql-client &&
        docker-php-ext-install pdo_mysql mbstring &&
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
        while ! curl -s http://laravel.test > /dev/null; do
          echo 'En attente de Laravel...';
          sleep 2;
        done &&
        cd /var/www/html &&
        composer install &&
        echo 'Démarrage de Horizon...' &&
        php artisan horizon
      "
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      LARAVEL_SAIL: 1
      DB_HOST: mysql
      DB_DATABASE: backend_db
      DB_USERNAME: backend_user
      DB_PASSWORD: cafe_password
    volumes:
      - ../backend:/var/www/html
    networks:
      - sail
    depends_on:
      - mysql
      - laravel.test
    restart: unless-stopped
    profiles:
      - horizon

  frontend:
    image: node:22-alpine
    volumes:
      - ../frontend:/app
      - frontend-node_modules:/app/node_modules
    working_dir: /app
    command: >
      sh -c "
        echo 'Installation des dépendances Node.js...' &&
        npm install &&
        echo 'En attente de Laravel...' &&
        while ! nc -z laravel.test 80; do
          sleep 1;
        done &&
        echo 'Démarrage du serveur frontend...' &&
        npm run dev -- -H 0.0.0.0
      "
    ports:
      - '${FRONTEND_PORT:-3000}:3000'
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_BACKEND_URL: 'http://laravel.test'
      NEXT_TELEMETRY_DISABLED: 1
    networks:
      - sail
    depends_on:
      - laravel.test

  mysql:
    image: mysql:8.0
    container_name: cafe-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: backend_db
      MYSQL_USER: backend_user
      MYSQL_PASSWORD: cafe_password
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_ALLOW_EMPTY_PASSWORD: "false"
    ports:
      - '${FORWARD_DB_PORT:-3307}:3306'
    volumes:
      - 'sail-mysql:/var/lib/mysql'
    networks:
      - sail
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-prootpassword" ]
      retries: 3
      timeout: 5s
      start_period: 20s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: cafe-phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8080:80"
    networks:
      - sail

networks:
  sail:
    driver: bridge

volumes:
  sail-mysql:
    driver: local
  frontend-node_modules:
    driver: local